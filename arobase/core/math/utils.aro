fn pow(a: integer, b: integer) : integer
{
    let out: integer = 1;

    while (b > 0)
    {
        out = out * a;
        b = b-1;
    }

    return out;
}

fn abs(a: integer) : integer
{
    if (a < 0)
    {
        a = a * -1;
    }

    return a;
}

fn factorial(a: integer) : integer
{
    let out: integer = 1;
    let i: integer = 1;

    while (i <= a)
    {
        out = out * i;
        i = i + 1;
    }

    return out;

}